name: Simple Pipeline :)

on:
  push:
    branches: [ master ]

jobs:
  bump-version:
    runs-on: ubuntu-24.04
    outputs:
      NEW_VERSION: ${{ steps.bump-version.outputs.NEW_VERSION }} 

    steps:
      - uses: actions/checkout@v4
      - name: Bump version
        id: bump-version
        run: |
          current_version=$(grep -m1 '<version>.*</version>' pom.xml | sed -E 's/<\/?version>//g')
          IFS='.' read -r major minor patch <<< "$current_version"
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          sed -i -E "s/<version>$current_version<\/version>/<version>$new_version<\/version>/" pom.xml

          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
      - name: Upload pom.xml artifact
        uses: actions/upload-artifact@v4
        with:
          name: pom.xml
          path: pom.xml
  
  # build-artifact:
  #   runs-on: ubuntu-24.04
  #   needs: bump-version 
  #   steps:
  #     - name: Checkout branch
  #       uses: actions/checkout@v4
  #     - name: Download build.gradle.kts artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build.gradle.kts
  #         path: .
  #     - name: Build JAR with Gradle
  #       run: ./gradlew jar
  #     - name: Upload JAR artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: helloworld-${{ needs.bump-version.outputs.NEW_VERSION }}.jar
  #         path: build/libs/*.jar
  #
  # build-docker:
  #   runs-on: ubuntu-24.04
  #   needs: bump-version
  #   steps:
  #     - name: Checkout branch
  #       uses: actions/checkout@v4
  #     - name: Download build.gradle.kts artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build.gradle.kts
  #         path: .
  #     - name: Build and push Docker image
  #       env: 
  #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
  #         VERSION: ${{ needs.bump-version.outputs.NEW_VERSION }} 
  #       run: |
  #         echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #         docker build -t jamoos/graal:latest \
  #                       -t jamoos/graal:$VERSION .
  #         docker push jamoos/graal:latest
  #         docker push jamoos/graal:$VERSION
  #
  # test-docker:
  #   runs-on: ubuntu-24.04
  #   needs: [bump-version, build-docker]
  #   steps:
  #     - name: Pull and run Docker image
  #       env:
  #         VERSION: ${{ needs.bump-version.outputs.NEW_VERSION }}
  #         EXPECTED_OUTPUT: "Mr. K says: \"World, Hold on!\""
  #       run: |
  #         docker pull jamoos/graal:$VERSION
  #         ACTUAL_OUTPUT=$(docker run --rm jamoos/graal:$VERSION)
  #         echo "Actual Output:"
  #         echo $ACTUAL_OUTPUT
  #
  #         if [ "$ACTUAL_OUTPUT" = "$EXPECTED_OUTPUT" ]; then
  #           echo "Test passed: Output matches expected value."
  #         else
  #           echo "Test failed: Output does not match expected value."
  #           echo "Expected: $EXPECTED_OUTPUT"
  #           echo "Actual: $ACTUAL_OUTPUT"
  #           exit 1 
  #         fi
  # commit-new-version: 
  #   runs-on: ubuntu-24.04
  #   needs: [bump-version, build-artifact, build-docker, test-docker]
  #   if: needs.test-docker.result == 'success' 
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download build.gradle.kts artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build.gradle.kts
  #         path: .
  #     - name: Merge version bump branch into master
  #       run: |
  #         git config user.name "github-actions[bot]"
  #         git config user.email "<>"
  #         git add build.gradle.kts
  #         git commit -m "Bump version to ${{ needs.bump-version.outputs.NEW_VERSION }} [skip ci]"
  #         git push
