name: Simple Pipeline :)
permissions:
  id-token: write 
  contents: read 

on:
  push:
    branches: [ master ]

jobs:
  bump-version:
    runs-on: ubuntu-24.04
    outputs:
      NEW_VERSION: ${{ steps.bump-version.outputs.NEW_VERSION }} 

    steps:
      - uses: actions/checkout@v4
      - name: Bump version
        id: bump-version
        run: |
          current_version=$(grep -m1 '<version>.*</version>' pom.xml | sed -E 's/<\/?version>//g' | tr -d ' '| tr -d '\n')
          IFS='.' read -r major minor patch <<< "$current_version"
          new_patch=$((patch + 1))
          new_version=$(echo "$major.$minor.$new_patch" | sed -E 's/ //'| tr -d '\n')
          sed -i -E "s/<version>$current_version<\/version>/<version>$new_version<\/version>/" pom.xml

          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
      - name: Upload pom.xml artifact
        uses: actions/upload-artifact@v4
        with:
          name: pom.xml
          path: pom.xml
  
  build-docker:
    runs-on: ubuntu-24.04
    needs: bump-version
    env:
      ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Download pom.xml artifact
        uses: actions/download-artifact@v4
        with:
          name: pom.xml
          path: .
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }} 
          logLevel: DEBUG

      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          VERSION: ${{ needs.bump-version.outputs.NEW_VERSION }}
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com 
          ECR_REPOSITORY: ${{ github.repository }}  
          IMAGE_TAG: ${{ env.VERSION }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  test-docker:
    runs-on: ubuntu-24.04
    needs: [bump-version, build-docker]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }} 

      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull and run Docker image
        env:
          VERSION: ${{ needs.bump-version.outputs.NEW_VERSION }}
          AWS_ACCOUNT_ID: ${{ fromJSON(secrets.AWS_ROLE_ARN).accountId }}
          ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com 
          ECR_REPOSITORY: ${{ github.repository }} 
          EXPECTED_OUTPUT: "Hello World!"
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
          ACTUAL_OUTPUT=$(docker run --rm $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION)
          echo "Actual Output:"
          echo $ACTUAL_OUTPUT

          if [ "$ACTUAL_OUTPUT" = "$EXPECTED_OUTPUT" ]; then
            echo "Test passed: Output matches expected value."
          else
            echo "Test failed: Output does not match expected value."
            echo "Expected: $EXPECTED_OUTPUT"
            echo "Actual: $ACTUAL_OUTPUT"
            exit 1 
          fi
  
  commit-new-version: 
    runs-on: ubuntu-24.04
    needs: [bump-version, build-docker, test-docker]
    if: needs.test-docker.result == 'success' 
    steps:
      - uses: actions/checkout@v4
      - name: Download pom.xml artifact
        uses: actions/download-artifact@v4
        with:
          name: pom.xml
          path: .
      - name: Merge version bump branch into master
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "<>"
          git add pom.xml
          git commit -m "Bump version to ${{ needs.bump-version.outputs.NEW_VERSION }} [skip ci]"
          git push
